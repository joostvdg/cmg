name: Go Build
on:
  push:
    branches:
      - master

env:
  PROJECT_ID: ${{ secrets.RUN_PROJECT }}
  RUN_REGION: europe-west4
  SERVICE_NAME: cmg

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: check go version
        run: go version
      - name: get dependency
        run: go get -t -v ./...
      - name: gofmt
        run: gofmt -s -w -l **/*.go
      - name: test
        run: make test
      - name: build
        run: GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o cmg.sh

  tag:
    name: Create Tag & Release
    needs: [build]
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.version_bump.outputs.new_tag }}
    steps:
      - uses: actions/checkout@master
      - id: version_bump
        name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.17.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{steps.version_bump.outputs.new_tag}}
          release_name: Release ${{steps.version_bump.outputs.new_tag}}

  sonarCloudTrigger:
    name: SonarCloud Trigger
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

#  sync-heroku:
#    needs: [build]
#    runs-on: ubuntu-latest
#    steps:
#    - name: repo-sync
#      uses: wei/git-sync@master
#      env:
#        SOURCE_REPO: "git@github.com:joostvdg/cmg.git"
#        SOURCE_BRANCH: "master"
#        DESTINATION_REPO: "git@heroku.com:catan-map-generator.git"
#        DESTINATION_BRANCH: "master"
#        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
#      with:
#        args: $SOURCE_REPO $SOURCE_BRANCH $DESTINATION_REPO $DESTINATION_BRANCH

  cloud-run:
    name: Google Cloud Run
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Setup gcloud CLI
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          service_account_key: ${{ secrets.RUN_SA_KEY }}
          project_id: ${{ secrets.RUN_PROJECT }}

      # Build and push image to Google Container Registry
      - name: Build
        run: |-
          gcloud builds submit \
            --quiet \
            --tag "gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA"
      # Deploy image to Cloud Run
      - name: Deploy
        run: |-
          gcloud run deploy "$SERVICE_NAME" \
            --quiet \
            --region "$RUN_REGION" \
            --image "gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA" \
            --platform "managed" \
            --allow-unauthenticated\
            --memory=128mb \
            --max-instances=2 \
            --timeout=30