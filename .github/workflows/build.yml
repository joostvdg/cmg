name: Go Build
on:
  push:
    branches:
      - master

env:
  PROJECT_ID: ${{ secrets.RUN_PROJECT }}
  RUN_REGION: europe-west4
  SERVICE_NAME: cmg

jobs:
  test:
    name: Test
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-go@v1
        with:
          stable: 'false'
          go-version: '^1.16'
      - name: check go version
        run: go version
      - name: get dependency
        run: go get -t -v ./...
      - name: gofmt
        run: gofmt -s -w -l **/*.go
      - name: test
        run: go test ./...

  tag:
    name: Create Tag & Release
    needs: [test]
    runs-on: ubuntu-20.04
    outputs:
      tag: ${{ steps.version_bump.outputs.new_tag }}
    steps:
      - uses: actions/checkout@master
      - id: version_bump
        name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.17.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: false
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: v${{steps.version_bump.outputs.new_tag}}
          release_name: Release ${{steps.version_bump.outputs.new_tag}}

  sonarCloudTrigger:
    name: SonarCloud Trigger
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@master
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  cloud-run:
    name: Google Cloud Run
    runs-on: ubuntu-20.04
    needs: tag

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # Setup gcloud CLI
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          service_account_key: ${{ secrets.RUN_SA_KEY }}
          project_id: ${{ secrets.RUN_PROJECT }}

      # Build and push image to Google Container Registry
      - name: Build
        run: gcloud builds submit --tag gcr.io/$PROJECT_ID/$SERVICE_NAME:${{needs.tag.outputs.tag}}
      # Deploy image to Cloud Run
      - name: Deploy
        run: |-
          gcloud run deploy "$SERVICE_NAME" \
            --project=$PROJECT_ID \
            --region "$RUN_REGION" \
            --image "gcr.io/$PROJECT_ID/$SERVICE_NAME:${{needs.tag.outputs.tag}}" \
            --platform "managed" \
            --allow-unauthenticated\
            --memory=128Mi \
            --max-instances=2 \
            --timeout=30